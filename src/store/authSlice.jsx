import { createSlice } from "@reduxjs/toolkit";

// State: The slice manages a specific portion of the Redux state. For example, it might have slices for user, posts, comments, etc., where each slice handles its own state.

// Reducers: These are functions that specify how the sliceâ€™s state should change in response to actions. Each slice typically has its own set of reducers to handle state updates.

// Actions: These are functions generated by Redux Toolkit that can be dispatched to trigger the corresponding reducers. They are automatically created based on the reducer functions defined in the slice.
const initialState = {
  user: "",
};
const authSlice = createSlice({
  name: "auth",
  initialState,
  // reducers are like employees taking actions
  reducers: {
    login(state, action) {
      state.user = action.payload; // payload will be the email and password
      console.log(action.payload);
    },
    logout(state) {
      state.user = "";
    },
  },
});
// action: The second parameter, action, contains information about the action being dispatched, including any data sent with the action (called payload).
export const { login, logout } = authSlice.actions;
export default authSlice.reducer;
export const authReducer = authSlice.reducer;
